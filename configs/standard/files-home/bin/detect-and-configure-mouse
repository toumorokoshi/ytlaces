#!/usr/bin/env bash

# device if for logitech unifying reciever (mouse)
LOGITECH="046d:c52b"

# Detect if there is a mouse connected, and
# configure the xmodmap to flip the mouse around if needed.
main() {
    if mouse_connected; then
        echo "mouse detected"
        # this pre-check of xmodmap had to be added,
        # as running xmodmap -e constantly resulted in
        # flickering and crashing of chromium-based apps
        # (chrome / vscode).
        if [[ "$(get_first_mapped_pointer_code)" != "3" ]]; then
            echo "remapping buttons"
            xmodmap -e 'pointer = 3 2 1'
        fi
    else
        echo "mouse not detected"
        if [[ "$(get_first_mapped_pointer_code)" != "1" ]]; then
            echo "remapping buttons"
            xmodmap -e 'pointer = 1 2 3'
        fi
    fi
}

mouse_connected() {
    # this is more complete but probably okay to not go
    # this extreme (leads to 'Couldn't open device to stderr')
    # lsusb check and bluetooth check
    # Logitech tests for a unifying receiver.
    lsusb | grep -qi "mouse\|LOGITECH\|Areson" || \
        bluetoothctl devices Connected | grep -qi "mouse"
}

# sample xmodmap -pp output:
# ---
# There are 10 pointer buttons defined.
#
#     Physical        Button
#      Button          Code
#         1              1
# ---
##
get_first_mapped_pointer_code () {
    xmodmap -pp | head -n 5 | tail -n 1 | awk '{print $2}'
}

main